void draw_mann(float x, float y,int pose,float scale,String shirt_color){
  if(shirt_color.equals("red")){
     fill(255,0,0);
     stroke(255,0,0);
  }
  if(shirt_color.equals("green")){
     fill(0,181,0);
     stroke(0,181,0);
  }
  
  if(pose==1){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-10*scale,y-20*scale,scale*6,scale*10);
    rect(x+4*scale,y-20*scale,scale*6,scale*10);
    rect(x-10*scale,y-10*scale,scale*6,scale*10);
    rect(x+4*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==2){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-12*scale,y-20*scale,scale*6,scale*10);
    rect(x+6*scale,y-20*scale,scale*6,scale*10);
    rect(x-14*scale,y-10*scale,scale*6,scale*10);
    rect(x+8*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==3){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-13*scale,y-20*scale,scale*6,scale*10);
    rect(x+7*scale,y-20*scale,scale*6,scale*10);
    rect(x-18*scale,y-10*scale,scale*6,scale*10);
    rect(x+12*scale,y-10*scale,scale*6,scale*10);
  }
  if(pose==4){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-12*scale,y-30*scale,scale*6,scale*10);
    rect(x+6*scale,y-30*scale,scale*6,scale*10);
    rect(x-16*scale,y-20*scale,scale*6,scale*10);
    rect(x+10*scale,y-20*scale,scale*6,scale*10);
    rect(x-19*scale,y-10*scale,scale*6,scale*10);
    rect(x+15*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==5){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-13*scale,y-20*scale,scale*6,scale*10);
    rect(x+7*scale,y-20*scale,scale*6,scale*10);
    rect(x-18*scale,y-10*scale,scale*6,scale*10);
    rect(x+12*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==6){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-12*scale,y-20*scale,scale*6,scale*10);
    rect(x+6*scale,y-20*scale,scale*6,scale*10);
    rect(x-14*scale,y-10*scale,scale*6,scale*10);
    rect(x+8*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==7){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-10*scale,y-20*scale,scale*6,scale*10);
    rect(x+4*scale,y-20*scale,scale*6,scale*10);
    rect(x-10*scale,y-10*scale,scale*6,scale*10);
    rect(x+4*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==8){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-8*scale,y-20*scale,scale*6,scale*10);
    rect(x+2*scale,y-20*scale,scale*6,scale*10);
    rect(x-6*scale,y-10*scale,scale*6,scale*10);
    rect(x+1*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==9){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-7*scale,y-20*scale,scale*6,scale*10);
    rect(x+1*scale,y-20*scale,scale*6,scale*10);
    rect(x-2*scale,y-10*scale,scale*6,scale*10);
    rect(x-4*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==10){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-8*scale,y-30*scale,scale*6,scale*10);
    rect(x+2*scale,y-30*scale,scale*6,scale*10);
    rect(x-4*scale,y-20*scale,scale*6,scale*10);
    rect(x-4*scale,y-20*scale,scale*6,scale*10);
    rect(x+2*scale,y-10*scale,scale*6,scale*10);
    rect(x-7*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==11){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-7*scale,y-20*scale,scale*6,scale*10);
    rect(x+1*scale,y-20*scale,scale*6,scale*10);
    rect(x-2*scale,y-10*scale,scale*6,scale*10);
    rect(x-4*scale,y-10*scale,scale*6,scale*10);
  }
  
  if(pose==12){
    rect(x-10*scale,y-55*scale,scale*20,scale*25);
    fill(-17813);
    stroke(-17813);
    rect(x-15*scale,y-75*scale,scale*30,scale*20);
    fill(-16763137);
    stroke(-16763137);
    rect(x-10*scale,y-30*scale,scale*6,scale*10);
    rect(x+4*scale,y-30*scale,scale*6,scale*10);
    rect(x-8*scale,y-20*scale,scale*6,scale*10);
    rect(x+2*scale,y-20*scale,scale*6,scale*10);
    rect(x-6*scale,y-10*scale,scale*6,scale*10);
    rect(x+1*scale,y-10*scale,scale*6,scale*10);
  }
}
